name: "Latest tag from master branch"

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '.github/**'
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'

env:
  IMAGE: go-socks5-proxy
  TAG: latest
  GOLANG_VERSION: "1.16.5"
  PLATFORMS: "linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64"

jobs:
  hadolint:
    name: hadolint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: hadolint
      uses: hadolint/hadolint-action@v2.1.0
      with:
        ignore: DL3018
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.7.0
        with:
          version: latest
          install: true
          use: true
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Print builder available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to Docker hub
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2.10.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          build-args: |
            GOLANG_VERSION=${{ env.GOLANG_VERSION }}
          tags: ${{ secrets.DOCKER_USER }}/${{ env.IMAGE }}:${{ env.TAG }}
      #- name: Inspect image
      #  run: |
      #    docker buildx imagetools inspect ${{ secrets.DOCKER_USER }}/${{ env.IMAGE }}:${{ env.TAG }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
